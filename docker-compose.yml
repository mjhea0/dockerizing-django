version: '3'

services:
  web:
    restart: always
    build: ./web
    ports:
      - "${HOST_WEB_PORT}:8000"
    volumes:
      - ./web:/usr/src/app
    entrypoint: ["./wait-for-it.sh", "${DB_HOST}:${DB_PORT}", "--strict", "--timeout=300", "--"]
    env_file: .env
    environment:
      DEBUG: 'true'
      DB_TYPE: ${DB_TYPE}
    command: bash -c "python manage.py makemigrations && python manage.py migrate && gunicorn docker_django.wsgi:application --reload --log-level=debug -w 2 -b :8000"

  nginx:
    restart: always
    build: ./nginx
    ports:
      - "${HOST_NGINX_PORT}:80"
    volumes:
      - ./web/static:/www/static
      - ./nginx/sites-enabled:/etc/nginx/sites-enabled
    links:
      - web:web

  redis:
    restart: always
    image: redis:latest
    ports:
      - "${HOST_REDIS_PORT}:6379"
    volumes:
      - redisdata:/data

  database:
    build: ./${DB_TYPE}
    image: ${DB_TYPE}_db
    environment:
      # POSTGRES SPECIFIC
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      # MYSQL SPECIFIC
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASS}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
    ports:
      - "${HOST_DATABASE_PORT}:${DB_PORT}"
    volumes:
      - mysql-vol:/var/lib/mysql
      - pgdata:/var/lib/postgresql/data/

volumes:
  mysql-vol:
  pgdata:
  redisdata:
